const express = require('express');
const app = express();
const PORT = process.env.PORT || 5000;

app.use(express.json());

// Routes
app.use('/api/data', require('./routes/data'));

app.listen(PORT, () => console.log(Server running on portÂ ${PORT}));
const mongoose = require('mongoose');

mongoose.connect('mongodb+srv://<username>:<password>@<cluster-url>/<database>', {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    useFindAndModify: false
})
.then(() => console.log('MongoDB Connected'))
.catch(err => console.log(err));
const mongoose = require('mongoose');

const dataSchema = new mongoose.Schema({
    name: String,
    position: String,
    office: String,
    age: Number,
    start_date: Date,
    salary: String
});

module.exports = mongoose.model('Data', dataSchema);
const express = require('express');
const router = express.Router();
const Data = require('../models/Data');

// Get all data
router.get('/', async (req, res) => {
    try {
        const data = await Data.find();
        res.json(data);
    } catch (err) {
        res.status(500).json({ message: err.message });
    }
});

module.exports = router;
import React, { useState, useEffect } from 'react';

function Dashboard() {
    const [data, setData] = useState([]);

    useEffect(() => {
        fetchData();
    }, []);

    const fetchData = async () => {
        const response = await fetch('/api/data');
        const jsonData = await response.json();
        setData(jsonData);
    };

    return (
        <div>
            {/* Render your dashboard components using data */}
        </div>
    );
}

export default Dashboard;
import React from 'react';

function Dashboard({ data }) {
    return (
        <div>
            <h1>Dashboard</h1>
            <div className="primary-card">
                <h2>Primary Card Title</h2>
                {/* Render data for the primary card */}
            </div>
            {/* Render other cards and data accordingly */}
        </div>
    );
}

export default Dashboard;
